@model BlogHub.Models.UserModel

@{
    ViewData["Title"] = "Edit User";
}

<div class="container mt-5">
    <div class="row">
        <div class="col">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/">Home</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "User")">User List</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Edit User</li>
                </ol>
            </nav>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <h2>Edit User</h2>
        </div>
    </div>
    <div class="row">
        <div class="col-md-8">
            <form asp-controller="User" asp-action="EditUser" method="post" class="needs-validation" novalidate>
                <input type="hidden" asp-for="Userid" />

                <div class="form-group">
                    <label for="Username">Username</label>
                    <input type="text" class="form-control" id="Username" name="Username" value="@Model.Username" required>
                    <div class="invalid-feedback">
                        Please provide a valid username.
                    </div>
                </div>
                <div class="form-group">
                    <label for="Email">Email</label>
                    <input type="email" class="form-control" id="Email" name="Email" value="@Model.Email" required>
                    <div class="invalid-feedback">
                        Please provide a valid email address.
                    </div>
                </div>
                <div class="form-group">
                    <label for="Contactno">Contact Number</label>
                    <input type="tel" class="form-control" id="Contactno" name="Contactno" value="@Model.Contactno" required>
                    <div class="invalid-feedback">
                        Please provide a valid contact number.
                    </div>
                </div>
                <div class="form-group">
                    <label for="Country">Country</label>
                    <select class="form-control" id="Country" name="Country" required>
                        <option value="">Select a Country</option>
                        @if (Model.Country == "India")
                        {
                            <option value="India" selected>India</option>
                        }
                        else
                        {
                            <option value="India">India</option>
                        }

                        @if (Model.Country == "Canada")
                        {
                            <option value="Canada" selected>Canada</option>
                        }
                        else
                        {
                            <option value="Canada">Canada</option>
                        }

                        @if (Model.Country == "USA")
                        {
                            <option value="USA" selected>USA</option>
                        }
                        else
                        {
                            <option value="USA">USA</option>
                        }
                    </select>
                    <div class="invalid-feedback">
                        Please select a country from the list.
                    </div>
                </div>

                <button type="submit" class="btn btn-primary">Edit User</button>
                <a href="@Url.Action("Index", "User")" class="btn btn-secondary">Back to User List</a>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // JavaScript code for custom form validation using Bootstrap
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                // Fetch all the forms to apply custom Bootstrap validation styles
                var forms = document.getElementsByClassName('needs-validation');
                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
}
